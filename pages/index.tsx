import type { NextPage } from 'next'
import { GetStaticProps } from 'next'

import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

type props = {
  props: string
}


const Home: NextPage<props> = ({ props }) => {

  console.log(props)

  return (
    <div className=''>
      <Head>
        <title>RootLab | NextJS products (Typescript)</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className=''>
        <h1 className=''>
          Welcome to the RootLab | Rootstack
        </h1>

        <p className=''>
          Get started by editing with typeScript
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        
      </main>

      <footer className=''>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by Rootstack
        </a>
      </footer>
    </div>
  )
}

// You should use getStaticProps when:
//- The data required to render the page is available at build time ahead of a user’s request.
//- The data comes from a headless CMS.
//- The data can be publicly cached (not user-specific).
//- The page must be pre-rendered (for SEO) and be very fast — getStaticProps generates HTML and JSON files, both of which can be cached by a CDN for performance.

export const getStaticProps: GetStaticProps = async (ctx) => {
  const { data } = await fetch('api/hello');

  return {
    props: {
      data
    }
  }
}


export default Home
